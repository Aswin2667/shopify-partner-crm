services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: ${APP_CONTAINER_NAME:-dev_app}
  #   ports:
  #     - "3000:3000"
  #     - "8081:8080"
  #     - "8082:8081"
  #   volumes:
  #     - .:/app/
  #   networks:
  #     - app_network
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "curl -f http://localhost:${APP_CLIENT_PORT:-3000} || exit 1",
  #       ]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 10s

  redis:
    image: ${REDIS_IMAGE:-redis}
    container_name: ${REDIS_CONTAINER_NAME:-redis}
    ports:
      - "${REDIS_PORT:-6378}:6379"
    networks:
      - app_network
    volumes:
      - redis_volume_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: ${POSTGRES_IMAGE:-postgres:latest}
    hostname: ${POSTGRES_HOSTNAME:-postgres}
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres_db}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis_gui:
    image: ${REDIS_GUI_IMAGE:-redislabs/redisinsight:1.14.0}
    container_name: ${REDIS_GUI_CONTAINER_NAME:-redis_gui}
    ports:
      - "${REDIS_GUI_PORT:-9002}:8001"
    networks:
      - app_network
    volumes:
      - redis_insight_volume_data:/db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: postgres_gui
    ports:
      - "${PGADMIN_PORT:-8888}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@pgadmin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  s3:
    image: quay.io/minio/minio
    command: "server /data --console-address :9123"
    ports:
      - "9123:9123"
      - "9001:9000"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: 12345678
    container_name: s3
    networks:
      - app_network

volumes:
  redis_insight_volume_data:
  redis_volume_data:
  pgadmin-data:

networks:
  app_network:
    driver: bridge
